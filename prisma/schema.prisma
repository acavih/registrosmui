// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String @unique
  password String
}

model Partner {
  id              String        @id @default(uuid())
  code            String
  name            String
  surname         String
  email           String
  phone           String
  notes           String  @db.Text
  sipcard         String
  birthdate       DateTime?
  pendent         String  @db.Text
  sex             Sex           @relation(fields: [sexId], references: [id])
  partnerState    PartnerState  @relation(fields: [partnerStateId], references: [id])
  nationality     Nationality   @relation(fields: [nationalityId], references: [id])
  residency       Residency     @relation(fields: [residencyId], references: [id])
  howDidKnowus    HowDidKnowus  @relation(fields: [howDidKnowusId], references: [id])
  yearDidKnowUs   YearDidKnowus @relation(fields: [yearDidKnowusId], references: [id])
  sexId           String
  partnerStateId  String
  nationalityId   String
  residencyId     String
  howDidKnowusId  String
  yearDidKnowusId String
  Attention       Attention[]

  @@map("partners")
}

model Sex {
  id      String    @id @default(uuid())
  name    String    @unique
  Partner Partner[]

  @@map("resources_sex")
}

model PartnerState {
  id      String    @id @default(uuid())
  name    String    @unique
  Partner Partner[]

  @@map("resources_partnerstates")
}

model Nationality {
  id      String    @id @default(uuid())
  name    String    @unique
  Partner Partner[]

  @@map("resources_nationalities")
}

model Residency {
  id      String    @id @default(uuid())
  name    String    @unique
  Partner Partner[]

  @@map("resources_residencies")
}

model HowDidKnowus {
  id      String    @id @default(uuid())
  name    String    @unique
  Partner Partner[]

  @@map("resources_howdidknowus")
}

model YearDidKnowus {
  id      String    @id @default(uuid())
  name    String    @unique
  Partner Partner[]

  @@map("resources_yeardidknowus")
}

model Attention {
  id                String              @id @default(uuid())
  note              String @db.Text
  date              DateTime
  pendent String @db.Text
  pendentDate           DateTime?
  partner           Partner             @relation(fields: [partnerId], references: [id], onDelete: Cascade)
  archived          Boolean             @default(false)
  partnerId         String
  TypeAttentions    TypeAttentions[]
  Projects          Projects[]
  AttentionsReasons AttentionsReasons[]
  DerivedTo         DerivedTo[]
  DerivedFrom       DerivedFrom[]
  Formation         Formation[]
  Volunteer         Volunteer[]
  PlaceAttention    PlaceAttention?     @relation(fields: [placeAttentionId], references: [id])
  placeAttentionId  String?

  @@map("attentions")
}

model PlaceAttention {
  id        String      @id @default(uuid())
  name      String      @unique
  Attention Attention[]

  @@map("resources_placeattentions")
}

model TypeAttentions {
  id        String      @id @default(uuid())
  name      String      @unique
  Attention Attention[]

  @@map("resources_typeattentions")
}

model Projects {
  id        String      @id @default(uuid())
  name      String      @unique
  Attention Attention[]

  @@map("resources_projects")
}

model AttentionsReasons {
  id        String      @id @default(uuid())
  name      String      @unique
  Attention Attention[]

  @@map("resources_attentionsreasons")
}

model DerivedTo {
  id        String      @id @default(uuid())
  name      String      @unique
  Attention Attention[]

  @@map("resources_derivedto")
}

model DerivedFrom {
  id        String      @id @default(uuid())
  name      String      @unique
  Attention Attention[]

  @@map("resources_derivedfrom")
}

model Formation {
  id        String      @id @default(uuid())
  name      String      @unique
  Attention Attention[]

  @@map("resources_formation")
}

model Volunteer {
  id        String      @id @default(uuid())
  name      String      @unique
  Attention Attention[]

  @@map("resources_volunteer")
}
